local datos = require("main.datos")

function init(self)
	self.posicion = go.get_position()
	self.direccion = 1
	self.direccion_de_movmiento = vmath.vector3(self.direccion, 0, self.posicion.z)
	self.velocidad = datos.velocidad_de_plataformas
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local posicion_nueva = self.direccion_de_movmiento * self.velocidad * dt
	local posicion_actual = go.get_position()
	go.set_position(posicion_actual + posicion_nueva)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") and message.other_group == hash("player") then
		if message.enter == true then
			msg.post(message.other_id, "set_parent", {parent_id = go.get_id(), keep_world_transform = 1})
		elseif message.enter == false then
			msg.post(message.other_id, "set_parent", {keep_world_transform = 1})

		end
	elseif message_id == hash("trigger_response") and message.other_group == hash("pared") then
		if message.enter == true then
			if self.direccion == 1 then 
				self.direccion = -1 
			else
				self.direccion = 1
			end
			self.direccion_de_movmiento = vmath.vector3(self.direccion, 0, self.posicion.z)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
