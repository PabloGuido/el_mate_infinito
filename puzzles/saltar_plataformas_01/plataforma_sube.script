-- Hay que hacer que las plataformas se muevan
-- indefinidamente y que vayan y vengan rebotando contra 
-- otro objeto. 

function init(self)
	local p = go.get_position()
	local new_p = vmath.vector3(p.x, p.y + 100, p.z)
	go.animate(".", "position", go.PLAYBACK_LOOP_PINGPONG, new_p, go.EASING_LINEAR, 2)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if message.enter == true then
			msg.post(message.other_id, "set_parent", {parent_id = go.get_id(), keep_world_transform = 1})
		elseif message.enter == false then
			msg.post(message.other_id, "set_parent", {keep_world_transform = 1})

		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
