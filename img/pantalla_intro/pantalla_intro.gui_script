local datos = require("main.datos")

local texto_de_la_historia = {}
texto_de_la_historia[1] = [[Durante generaciones
hombres y mujeres han contado la historia
de un Mate Infinito.
]]
texto_de_la_historia[2] = [[Un mate tan poderoso que,
su bombilla nunca se tapara,
su yerba nunca se lavara]]
texto_de_la_historia[3] = [[y el agua siempre conservara
la temperatura perfecta para quien lo beba.]]
texto_de_la_historia[4] = [[Pero sus partes se perdieron hace cientos de anos
y ya nadie mas volvio a verlo.]]
texto_de_la_historia[5] = [[Pero hay rumores...
Y existe la posibilidad de encontrar esta reliquia.]]
texto_de_la_historia[6] = [[Quien pueda aventurarse en las profundidades del bosque,
encontrara el Mate Infinito.]]

local function omitir_cinematica (self)
	msg.post("#pantalla_intro_controlador", "omitir_cinematica", {audio = self.numero_de_audio_sonando})
	particlefx.stop("#efecto_intro")
	particlefx.stop("#efecto_intro1")
	gui.set_enabled(self.texto_omitir_cinematica, false)
	--particlefx.set_constant("#efecto_intro", "emitter", "tint", vmath.vector4(1, 1,1, 0)) -- si corta de una o no
	gui.animate(self.mate, "color.w", 0, gui.EASING_LINEAR, 2)
	gui.animate(self.mate_iluminado_byn, "color.w", 0, gui.EASING_LINEAR, 2)
	gui.animate(self.texto_historia, "color.w", 0, gui.EASING_LINEAR, 2)

	timer.delay(4, false, function()
		msg.post("camera", "disable")
		msg.post("main:/cargador_de_mapas_y_player#cargador_de_mapas", "fin_de_cinematica")
	end)
	
end

local function audio_y_text_cinematica (self)
	gui.animate(self.mate, "color.w", 1, gui.EASING_LINEAR, 2, 0,
	function()
		msg.post(".", "acquire_input_focus")
		gui.set_enabled(self.texto_omitir_cinematica, true)
		gui.animate(self.texto_omitir_cinematica, "color.w", 0.66, gui.EASING_LINEAR, 1.5)
		--gui.animate(self.mate, "color", vmath.vector4(0.1,0.1,0.1,1), gui.EASING_LINEAR, 1.5)
	end)

	local function secuencia_audio_texto ()
		if self.omitir_cinematica == false then
			if self.numero_de_texto == 4 then
				particlefx.set_constant("#efecto_intro", "emitter", "tint", vmath.vector4(1, 1,1, 1))
				local pos = gui.get_position(self.mate)
				gui.set_position(self.mate_iluminado_byn, pos)
				gui.set_texture(self.mate_iluminado_byn, "pantalla_intro")
				gui.play_flipbook(self.mate_iluminado_byn, "mate_iluminado_byn")
				gui.animate(self.mate, "color.w", 0, gui.EASING_LINEAR, 1)
				gui.animate(self.mate_iluminado_byn, "color.w", 1, gui.EASING_LINEAR, 1)
			elseif self.numero_de_texto == 6 then
				particlefx.set_constant("#efecto_intro", "emitter", "tint", vmath.vector4(0.2, 1, 0.2, 1))
				-- ver si se puede hacer esto
				--particlefx.set_constant("#efecto_intro", "emitter", "emitter_key_particle_speed", vmath.vector4(0, 200, 1, 0))
			end
			
			gui.set_text(self.texto_historia, texto_de_la_historia[self.numero_de_texto])
			gui.set_enabled(self.texto_historia, true)
			gui.animate(self.texto_historia, "color.w", 1, gui.EASING_LINEAR, 2)
			self.numero_de_audio_sonando = "audios_intro#sound" .. self.numero_de_texto
			sound.play(self.numero_de_audio_sonando, nil, 
			function()
				self.numero_de_texto = self.numero_de_texto + 1
				if self.numero_de_texto > table.maxn(texto_de_la_historia) then
					msg.post(".", "release_input_focus")
					omitir_cinematica(self)
					print("fin de cinematica")
					return
				else
					gui.animate(self.texto_historia, "color.w", 0, gui.EASING_LINEAR, 0.5, 0, secuencia_audio_texto)
					
				end
			end)
		end
	end
	secuencia_audio_texto ()
	self.cinematica_empezada = true
end

local function cinematica (self)
	particlefx.play("#efecto_intro")
	particlefx.play("#efecto_intro1")
	particlefx.set_constant("#efecto_intro", "emitter", "tint", vmath.vector4(1, 1,0, 1))
	gui.set_enabled(self.empezar_luz, false) -- nodo de click empezar juego
	
	gui.set_position(self.mate, vmath.vector3(640, 450, 0))
	gui.play_flipbook(self.mate, "mate_iluminado")	
	
	audio_y_text_cinematica (self)
end

local function fade_out_pantalla (self)
	gui.set_enabled(self.empezar_luz, false)
	gui.set_enabled(self.creditos_luz, false)

	local tiempo_de_fade = 1
	gui.animate(self.mate, "color.w", 0, gui.EASING_LINEAR, tiempo_de_fade)
	gui.animate(self.empezar, "color.w", 0, gui.EASING_LINEAR, tiempo_de_fade)
	gui.animate(self.creditos, "color.w", 0, gui.EASING_LINEAR, tiempo_de_fade)
	gui.animate(self.el_mate_infinito, "color.w", 0, gui.EASING_LINEAR, tiempo_de_fade)

	timer.delay(6, false, cinematica) -- delay para arrancar cinematica
end

function init(self)
	msg.post(".", "acquire_input_focus")

	self.cinematica_empezada = false
	self.omitir_cinematica = false
	
	
	self.mate = gui.get_node("mate")
	self.mate_iluminado_byn = gui.get_node("mate_iluminado_byn")
	self.texto_historia = gui.get_node("texto_historia")
	self.numero_de_texto = 1
	self.numero_de_audio_sonando = "audios_intro#sound" .. self.numero_de_texto
	self.el_mate_infinito = gui.get_node("el_mate_infinito")
	self.empezar = gui.get_node("empezar")
	self.empezar_luz = gui.get_node("empezar_luz")
	self.creditos = gui.get_node("creditos")
	self.creditos_luz = gui.get_node("creditos_luz")
	self.texto_omitir_cinematica = gui.get_node("texto_omitir_cinematica")
	
	gui.set_enabled(self.texto_omitir_cinematica, false)
	gui.set_enabled(self.empezar_luz, false)
	gui.set_enabled(self.creditos_luz, false)
	gui.set_enabled(self.texto_historia, false)
	gui.set_color(self.texto_historia, vmath.vector4(1,1,1,0)) -- texto alpha = 0

	sound.play("#viento")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if self.cinematica_empezada == false then
		if gui.pick_node(self.empezar, action.x, action.y) then
			gui.set_enabled(self.empezar_luz, true)
		elseif gui.pick_node(self.creditos_luz, action.x, action.y) then
			gui.set_enabled(self.creditos_luz, true)
		else
			gui.set_enabled(self.empezar_luz, false)
			gui.set_enabled(self.creditos_luz, false)
		end
		if gui.pick_node(self.empezar, action.x, action.y) and action.pressed == true then
			msg.post(".", "release_input_focus")
			msg.post("#pantalla_intro_controlador", "detener_viento")
			sound.play("#empezar")
			fade_out_pantalla (self)
		elseif gui.pick_node(self.creditos, action.x, action.y) and action.pressed == true then
			print("ir a creditos del juego")
			gui.set_enabled(self.creditos_luz, false)
		end
	end
	
	if action_id == hash("accion") and action.pressed then
		if self.cinematica_empezada == true then
			if self.omitir_cinematica == false then
				self.omitir_cinematica = true
				omitir_cinematica(self)
			end
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
